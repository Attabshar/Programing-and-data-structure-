**add.py:**

```python

def add_integer(a, b=98):

    if not isinstance(a, (int, float)) or not isinstance(b, (int, float)):

        raise TypeError("a must be an integer or b must be an integer")



    a = int(a)

    b = int(b)



    return a + b

```



**test_add.py:**

```python

import unittest

from add import add_integer



class TestAddInteger(unittest.TestCase):



    def test_add_integer(self):

        self.assertEqual(add_integer(3, 4), 7)

        self.assertEqual(add_integer(5.5, 2.5), 8)

        self.assertEqual(add_integer(10.6, 3), 13)

        self.assertEqual(add_integer(7), 105)



    def test_add_integer_invalid_input(self):

        with self.assertRaises(TypeError):

            add_integer('hello', 3)

        with self.assertRaises(TypeError):

            add_integer(2, 'world')



if __name__ == '__main__':

    unittest.main()

```

